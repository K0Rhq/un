---
import type { CollectionEntry } from "astro:content";
type PreviewType = CollectionEntry<"previews">;
interface Props {
  items: PreviewType[];
  parentId?: string;
}
const { items, parentId } = Astro.props;

// Only filter at the top level
const currentLevelItems = parentId
  ? items.filter(
      (item) =>
        item.id.startsWith(`${parentId}/`) &&
        item.id.split("/").length === parentId.split("/").length + 1,
    )
  : items.filter((item) => !item.id.includes("/"));
---

{
  currentLevelItems.map((item) => {
    if (item.data.directory) {
      return (
        <details open>
          <summary>{item.data.title}</summary>
          <div class="flex flex-col gap-2 pl-6 pt-2">
            <Astro.self items={items} parentId={item.id} />
          </div>
        </details>
      );
    }
    return (
      <a
        href={`/playground/${item.id}`}
        class={` ${
          Astro.url.pathname === `/playground/${item.id}` && "text-orange-400"
        }`}
      >
        {item.data.title}
      </a>
    );
  })
}
